/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
	api('org.springframework.boot:spring-boot-starter:2.7.15')
	api('org.springframework.boot:spring-boot-starter-web:2.7.15')
	api('org.springframework.boot:spring-boot-starter-jdbc:2.7.15')
	api ('org.postgresql:postgresql:42.5.1')
	api('org.apache.tomcat:tomcat-dbcp:10.1.15')
	api("org.liquibase:liquibase-core:4.25.0")
		
	//compile('com.h2database:h2')
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

apply plugin: 'war'
war {
	baseName = 'liquibase-impl'
}

defaultTasks 'clean','build'

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
